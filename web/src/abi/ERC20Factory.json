{
  "contractName": "ERC20Factory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimal",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "createTime",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct ERC20Factory.Token",
          "name": "token",
          "type": "tuple"
        }
      ],
      "name": "Issue",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "created",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "createTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getCreated",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimal",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "createTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Factory.Token[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createTime\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ERC20Factory.Token\",\"name\":\"token\",\"type\":\"tuple\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getCreated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createTime\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Factory.Token[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol\":\"ERC20Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol\":{\"keccak256\":\"0xe72e98afae26a1228739ed2bb7bbb99151cc0844fce552f91a97b1c40e703e04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6dd4d87cfa506fc04e94f4d23eb8ad0a75d86e19284abb630bf4b33c0b6417bb\",\"dweb:/ipfs/QmapxwjTb95Rn8y64qHkq24eVJ9SezqRGmAgRFnQnv7FDE\"]},\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol\":{\"keccak256\":\"0x0b302cd6df71506cf2338d5e66e29aade8ac2b1612574b1507aedf308583c757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4464c896089b5ef3e85d586bc6266a9a7ba7122a77abd7c1a07028ab50a35757\",\"dweb:/ipfs/QmceeZMQc2zT4wtDpaRuK2QYxXGkpbD1Hj4MPKNzrBULN7\"]},\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/IERC20.sol\":{\"keccak256\":\"0x45aaff2cbe37d23c846bfa34731b00682535628a8bcfdeb228befa09524b6a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6f4088d7a97b7d851af4acceb9df19fece481194468298060b41de731ee358\",\"dweb:/ipfs/QmRDANQ1ajduQoahpiVgzuqwGeEBT3oYzQ5ACEQvfTpCkV\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612ed6806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630ef9899214620000635780634f64b2be14620000995780635f8dead314620000d5578063aa6ca808146200010b578063b6791322146200012d575b600080fd5b6200008160048036038101906200007b919062000c6a565b6200014d565b604051620000909190620011aa565b60405180910390f35b620000b76004803603810190620000b1919062000d03565b6200021b565b604051620000cc97969594939291906200124d565b60405180910390f35b620000f36004803603810190620000ed919062000c96565b620003f0565b60405162000102919062001143565b60405180910390f35b620001156200043c565b604051620001249190620011ce565b60405180910390f35b6200014b600480360381019062000145919062000d2f565b620006c6565b005b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200020f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620001c4575b50505050509050919050565b600181815481106200022957fe5b9060005260206000209060070201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002d95780601f10620002ad57610100808354040283529160200191620002d9565b820191906000526020600020905b815481529060010190602001808311620002bb57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200037b5780601f106200034f576101008083540402835291602001916200037b565b820191906000526020600020905b8154815290600101906020018083116200035d57829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154905087565b600060205281600052604060002081815481106200040a57fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015620006bd57838290600052602060002090600702016040518060e0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620005215780601f10620004f55761010080835404028352916020019162000521565b820191906000526020600020905b8154815290600101906020018083116200050357829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620005c75780601f106200059b57610100808354040283529160200191620005c7565b820191906000526020600020905b815481529060010190602001808311620005a957829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660ff1660ff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820154815250508152602001906001019062000460565b50505050905090565b600083828685604051620006da9062000a89565b620006e99493929190620011f2565b604051809103906000f08015801562000706573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007b262000a97565b6040518060e001604052808681526020018481526020018560ff1681526020018781526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020014281525090508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886040518363ffffffff1660e01b8152600401620008539291906200117d565b602060405180830381600087803b1580156200086e57600080fd5b505af115801562000883573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008a9919062000cd7565b508173ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff1660e01b8152600401620008e5919062001160565b600060405180830381600087803b1580156200090057600080fd5b505af115801562000915573d6000803e3d6000fd5b50505050600181908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000190805190602001906200096392919062000b03565b5060208201518160010190805190602001906200098292919062000b03565b5060408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c0820151816006015550507f3a217e7f61e36178097f900c37d21a998dd748bc0e1a052bbf9470487eee09968160405162000a799190620012d8565b60405180910390a1505050505050565b611959806200154883390190565b6040518060e001604052806060815260200160608152602001600060ff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000b4657805160ff191683800117855562000b77565b8280016001018555821562000b77579182015b8281111562000b7657825182559160200191906001019062000b59565b5b50905062000b86919062000b8a565b5090565b62000baf91905b8082111562000bab57600081600090555060010162000b91565b5090565b90565b60008135905062000bc381620014df565b92915050565b60008151905062000bda81620014f9565b92915050565b600082601f83011262000bf257600080fd5b813562000c0962000c03826200132a565b620012fc565b9150808252602083016020830185838301111562000c2657600080fd5b62000c3383828462001489565b50505092915050565b60008135905062000c4d8162001513565b92915050565b60008135905062000c64816200152d565b92915050565b60006020828403121562000c7d57600080fd5b600062000c8d8482850162000bb2565b91505092915050565b6000806040838503121562000caa57600080fd5b600062000cba8582860162000bb2565b925050602062000ccd8582860162000c3c565b9150509250929050565b60006020828403121562000cea57600080fd5b600062000cfa8482850162000bc9565b91505092915050565b60006020828403121562000d1657600080fd5b600062000d268482850162000c3c565b91505092915050565b6000806000806080858703121562000d4657600080fd5b600062000d568782880162000c3c565b945050602085013567ffffffffffffffff81111562000d7457600080fd5b62000d828782880162000be0565b935050604062000d958782880162000c53565b925050606085013567ffffffffffffffff81111562000db357600080fd5b62000dc18782880162000be0565b91505092959194509250565b600062000ddb838362000e0e565b60208301905092915050565b600062000df5838362000f9d565b905092915050565b62000e08816200144d565b82525050565b62000e1981620013f6565b82525050565b62000e2a81620013f6565b82525050565b600062000e3d8262001377565b62000e498185620013b2565b935062000e568362001357565b8060005b8381101562000e8d57815162000e71888262000dcd565b975062000e7e8362001398565b92505060018101905062000e5a565b5085935050505092915050565b600062000ea78262001382565b62000eb38185620013c3565b93508360208202850162000ec78562001367565b8060005b8581101562000f09578484038952815162000ee7858262000de7565b945062000ef483620013a5565b925060208a0199505060018101905062000ecb565b50829750879550505050505092915050565b600062000f28826200138d565b62000f348185620013d4565b935062000f4681856020860162001498565b62000f5181620014ce565b840191505092915050565b600062000f69826200138d565b62000f758185620013e5565b935062000f8781856020860162001498565b62000f9281620014ce565b840191505092915050565b600060e083016000830151848203600086015262000fbc828262000f1b565b9150506020830151848203602086015262000fd8828262000f1b565b915050604083015162000fef604086018262001121565b506060830151620010046060860182620010ff565b50608083015162001019608086018262000e0e565b5060a08301516200102e60a086018262000e0e565b5060c08301516200104360c0860182620010ff565b508091505092915050565b600060e08301600083015184820360008601526200106d828262000f1b565b9150506020830151848203602086015262001089828262000f1b565b9150506040830151620010a0604086018262001121565b506060830151620010b56060860182620010ff565b506080830151620010ca608086018262000e0e565b5060a0830151620010df60a086018262000e0e565b5060c0830151620010f460c0860182620010ff565b508091505092915050565b6200110a8162001436565b82525050565b6200111b8162001436565b82525050565b6200112c8162001440565b82525050565b6200113d8162001440565b82525050565b60006020820190506200115a600083018462000e1f565b92915050565b600060208201905062001177600083018462000dfd565b92915050565b600060408201905062001194600083018562000dfd565b620011a3602083018462001110565b9392505050565b60006020820190508181036000830152620011c6818462000e30565b905092915050565b60006020820190508181036000830152620011ea818462000e9a565b905092915050565b600060808201905081810360008301526200120e818762000f5c565b9050818103602083015262001224818662000f5c565b905062001235604083018562001110565b62001244606083018462001132565b95945050505050565b600060e082019050818103600083015262001269818a62000f5c565b905081810360208301526200127f818962000f5c565b905062001290604083018862001132565b6200129f606083018762001110565b620012ae608083018662000e1f565b620012bd60a083018562000e1f565b620012cc60c083018462001110565b98975050505050505050565b60006020820190508181036000830152620012f481846200104e565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156200132057600080fd5b8060405250919050565b600067ffffffffffffffff8211156200134257600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620014038262001416565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006200145a8262001461565b9050919050565b60006200146e8262001475565b9050919050565b6000620014828262001416565b9050919050565b82818337600083830152505050565b60005b83811015620014b85780820151818401526020810190506200149b565b83811115620014c8576000848401525b50505050565b6000601f19601f8301169050919050565b620014ea81620013f6565b8114620014f657600080fd5b50565b62001504816200140a565b81146200151057600080fd5b50565b6200151e8162001436565b81146200152a57600080fd5b50565b620015388162001440565b81146200154457600080fd5b5056fe60806040523480156200001157600080fd5b506040516200195938038062001959833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050506000620001de6200031e60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35083600490805190602001906200029492919062000326565b508260059080519060200190620002ad92919062000326565b5080600660006101000a81548160ff021916908360ff1602179055508160038190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050620003d5565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036957805160ff19168380011785556200039a565b828001600101855582156200039a579182015b82811115620003995782518255916020019190600101906200037c565b5b509050620003a99190620003ad565b5090565b620003d291905b80821115620003ce576000816000905550600101620003b4565b5090565b90565b61157480620003e56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c578063a457c2d711610066578063a457c2d714610435578063a9059cbb1461049b578063dd62ed3e14610501578063f2fde38b14610579576100ea565b8063715018a61461035e5780638da5cb5b1461036857806395d89b41146103b2576100ea565b806323b872dd116100c857806323b872dd146101f6578063313ce5671461027c57806339509351146102a057806370a0823114610306576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d8575b600080fd5b6100f76105bd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061065f565b604051808215151515815260200191505060405180910390f35b6101e0610676565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610680565b604051808215151515815260200191505060405180910390f35b610284610747565b604051808260ff1660ff16815260200191505060405180910390f35b6102ec600480360360408110156102b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061075e565b604051808215151515815260200191505060405180910390f35b6103486004803603602081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610803565b6040518082815260200191505060405180910390f35b61036661084c565b005b6103706109d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ba6109fd565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103fa5780820151818401526020810190506103df565b50505050905090810190601f1680156104275780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104816004803603604081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a9f565b604051808215151515815260200191505060405180910390f35b6104e7600480360360408110156104b157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b5e565b604051808215151515815260200191505060405180910390f35b6105636004803603604081101561051757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b71565b6040518082815260200191505060405180910390f35b6105bb6004803603602081101561058f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf8565b005b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106555780601f1061062a57610100808354040283529160200191610655565b820191906000526020600020905b81548152906001019060200180831161063857829003601f168201915b5050505050905090565b600061066c338484610e05565b6001905092915050565b6000600354905090565b600061068d848484610ffc565b610740843361073b856040518060600160405280602881526020016114a960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112c19092919063ffffffff16565b610e05565b9392505050565b6000600660009054906101000a900460ff16905090565b60006107f933846107f485600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461138190919063ffffffff16565b610e05565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610854611409565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610915576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a955780601f10610a6a57610100808354040283529160200191610a95565b820191906000526020600020905b815481529060010190602001808311610a7857829003601f168201915b5050505050905090565b6000610b543384610b4f8560405180606001604052806025815260200161151a60259139600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112c19092919063ffffffff16565b610e05565b6001905092915050565b6000610b6b338484610ffc565b92915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c00611409565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061143a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806114f66024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806114606022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611082576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806114d16025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806114176023913960400191505060405180910390fd5b611113838383611411565b61117f8160405180606001604052806027815260200161148260279139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112c19092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061121481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461138190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061136e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611333578082015181840152602081019050611318565b50505050905090810190601f1680156113605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156113ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e742065786563656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656174656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220244c2e09f61b45b053d5411d193d2bb719393a6010ce9d6dfc54d79bb2b8c52464736f6c634300060b0033a2646970667358221220d56093ae13a0a03971d80185fde183e0a5467ab419b9a28c3c070dfd514dd25764736f6c634300060b0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "123:1626:6:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "123:1626:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;379:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1660:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;457:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1546:109;1600:16;1635:7;:13;1643:4;1635:13;;;;;;;;;;;;;;;1628:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:109;;;:::o;429:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;379:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1660:86::-;1701:14;1733:6;1726:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:86;:::o;457:568::-;612:14;640:4;646:6;654:13;669:7;630:47;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;612:66;;688:7;:19;696:10;688:19;;;;;;;;;;;;;;;721:8;688:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:18;;:::i;:::-;762:91;;;;;;;;768:4;762:91;;;;774:6;762:91;;;;782:7;762:91;;;;;;791:13;762:91;;;;806:10;762:91;;;;;;826:8;762:91;;;;;;837:15;762:91;;;741:112;;871:8;:17;;;889:10;901:13;871:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;925:8;:26;;;952:10;925:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:6;985:5;973:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:12;1012:5;1006:12;;;;;;:::i;:::-;;;;;;;;457:568;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;278:442::-;;380:3;373:4;365:6;361:17;357:27;347:2;;398:1;395;388:12;347:2;435:6;422:20;457:65;472:49;514:6;472:49;:::i;:::-;457:65;:::i;:::-;448:74;;542:6;535:5;528:21;578:4;570:6;566:17;611:4;604:5;600:16;646:3;637:6;632:3;628:16;625:25;622:2;;;663:1;660;653:12;622:2;673:41;707:6;702:3;697;673:41;:::i;:::-;340:380;;;;;;;:::o;728:130::-;;808:6;795:20;786:29;;820:33;847:5;820:33;:::i;:::-;780:78;;;;:::o;865:126::-;;943:6;930:20;921:29;;955:31;980:5;955:31;:::i;:::-;915:76;;;;:::o;998:241::-;;1102:2;1090:9;1081:7;1077:23;1073:32;1070:2;;;1118:1;1115;1108:12;1070:2;1153:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;:::i;:::-;1160:63;;1132:97;1064:175;;;;:::o;1246:366::-;;;1367:2;1355:9;1346:7;1342:23;1338:32;1335:2;;;1383:1;1380;1373:12;1335:2;1418:1;1435:53;1480:7;1471:6;1460:9;1456:22;1435:53;:::i;:::-;1425:63;;1397:97;1525:2;1543:53;1588:7;1579:6;1568:9;1564:22;1543:53;:::i;:::-;1533:63;;1504:98;1329:283;;;;;:::o;1619:257::-;;1731:2;1719:9;1710:7;1706:23;1702:32;1699:2;;;1747:1;1744;1737:12;1699:2;1782:1;1799:61;1852:7;1843:6;1832:9;1828:22;1799:61;:::i;:::-;1789:71;;1761:105;1693:183;;;;:::o;1883:241::-;;1987:2;1975:9;1966:7;1962:23;1958:32;1955:2;;;2003:1;2000;1993:12;1955:2;2038:1;2055:53;2100:7;2091:6;2080:9;2076:22;2055:53;:::i;:::-;2045:63;;2017:97;1949:175;;;;:::o;2131:825::-;;;;;2304:3;2292:9;2283:7;2279:23;2275:33;2272:2;;;2321:1;2318;2311:12;2272:2;2356:1;2373:53;2418:7;2409:6;2398:9;2394:22;2373:53;:::i;:::-;2363:63;;2335:97;2491:2;2480:9;2476:18;2463:32;2515:18;2507:6;2504:30;2501:2;;;2547:1;2544;2537:12;2501:2;2567:63;2622:7;2613:6;2602:9;2598:22;2567:63;:::i;:::-;2557:73;;2442:194;2667:2;2685:51;2728:7;2719:6;2708:9;2704:22;2685:51;:::i;:::-;2675:61;;2646:96;2801:2;2790:9;2786:18;2773:32;2825:18;2817:6;2814:30;2811:2;;;2857:1;2854;2847:12;2811:2;2877:63;2932:7;2923:6;2912:9;2908:22;2877:63;:::i;:::-;2867:73;;2752:194;2266:690;;;;;;;:::o;2964:173::-;;3051:46;3093:3;3085:6;3051:46;:::i;:::-;3126:4;3121:3;3117:14;3103:28;;3044:93;;;;:::o;3146:245::-;;3293:92;3381:3;3373:6;3293:92;:::i;:::-;3279:106;;3272:119;;;;:::o;3399:142::-;3490:45;3529:5;3490:45;:::i;:::-;3485:3;3478:58;3472:69;;:::o;3548:103::-;3621:24;3639:5;3621:24;:::i;:::-;3616:3;3609:37;3603:48;;:::o;3658:113::-;3741:24;3759:5;3741:24;:::i;:::-;3736:3;3729:37;3723:48;;:::o;3809:690::-;;3954:54;4002:5;3954:54;:::i;:::-;4021:86;4100:6;4095:3;4021:86;:::i;:::-;4014:93;;4128:56;4178:5;4128:56;:::i;:::-;4204:7;4232:1;4217:260;4242:6;4239:1;4236:13;4217:260;;;4309:6;4303:13;4330:63;4389:3;4374:13;4330:63;:::i;:::-;4323:70;;4410:60;4463:6;4410:60;:::i;:::-;4400:70;;4274:203;4264:1;4261;4257:9;4252:14;;4217:260;;;4221:14;4490:3;4483:10;;3933:566;;;;;;;:::o;4574:1032::-;;4765:77;4836:5;4765:77;:::i;:::-;4855:109;4957:6;4952:3;4855:109;:::i;:::-;4848:116;;4987:3;5029:4;5021:6;5017:17;5012:3;5008:27;5056:79;5129:5;5056:79;:::i;:::-;5155:7;5183:1;5168:399;5193:6;5190:1;5187:13;5168:399;;;5255:9;5249:4;5245:20;5240:3;5233:33;5300:6;5294:13;5322:110;5427:4;5412:13;5322:110;:::i;:::-;5314:118;;5449:83;5525:6;5449:83;:::i;:::-;5439:93;;5555:4;5550:3;5546:14;5539:21;;5225:342;5215:1;5212;5208:9;5203:14;;5168:399;;;5172:14;5580:4;5573:11;;5597:3;5590:10;;4744:862;;;;;;;;;:::o;5614:327::-;;5716:39;5749:5;5716:39;:::i;:::-;5767:61;5821:6;5816:3;5767:61;:::i;:::-;5760:68;;5833:52;5878:6;5873:3;5866:4;5859:5;5855:16;5833:52;:::i;:::-;5906:29;5928:6;5906:29;:::i;:::-;5901:3;5897:39;5890:46;;5696:245;;;;;:::o;5948:347::-;;6060:39;6093:5;6060:39;:::i;:::-;6111:71;6175:6;6170:3;6111:71;:::i;:::-;6104:78;;6187:52;6232:6;6227:3;6220:4;6213:5;6209:16;6187:52;:::i;:::-;6260:29;6282:6;6260:29;:::i;:::-;6255:3;6251:39;6244:46;;6040:255;;;;;:::o;6363:1420::-;;6500:4;6495:3;6491:14;6583:4;6576:5;6572:16;6566:23;6635:3;6629:4;6625:14;6618:4;6613:3;6609:14;6602:38;6655:73;6723:4;6709:12;6655:73;:::i;:::-;6647:81;;6520:220;6815:4;6808:5;6804:16;6798:23;6867:3;6861:4;6857:14;6850:4;6845:3;6841:14;6834:38;6887:73;6955:4;6941:12;6887:73;:::i;:::-;6879:81;;6750:222;7048:4;7041:5;7037:16;7031:23;7060:59;7113:4;7108:3;7104:14;7090:12;7060:59;:::i;:::-;6982:143;7205:4;7198:5;7194:16;7188:23;7217:63;7274:4;7269:3;7265:14;7251:12;7217:63;:::i;:::-;7135:151;7362:4;7355:5;7351:16;7345:23;7374:63;7431:4;7426:3;7422:14;7408:12;7374:63;:::i;:::-;7296:147;7516:4;7509:5;7505:16;7499:23;7528:63;7585:4;7580:3;7576:14;7562:12;7528:63;:::i;:::-;7453:144;7676:4;7669:5;7665:16;7659:23;7688:63;7745:4;7740:3;7736:14;7722:12;7688:63;:::i;:::-;7607:150;7774:4;7767:11;;6473:1310;;;;;:::o;7851:1430::-;;7998:4;7993:3;7989:14;8081:4;8074:5;8070:16;8064:23;8133:3;8127:4;8123:14;8116:4;8111:3;8107:14;8100:38;8153:73;8221:4;8207:12;8153:73;:::i;:::-;8145:81;;8018:220;8313:4;8306:5;8302:16;8296:23;8365:3;8359:4;8355:14;8348:4;8343:3;8339:14;8332:38;8385:73;8453:4;8439:12;8385:73;:::i;:::-;8377:81;;8248:222;8546:4;8539:5;8535:16;8529:23;8558:59;8611:4;8606:3;8602:14;8588:12;8558:59;:::i;:::-;8480:143;8703:4;8696:5;8692:16;8686:23;8715:63;8772:4;8767:3;8763:14;8749:12;8715:63;:::i;:::-;8633:151;8860:4;8853:5;8849:16;8843:23;8872:63;8929:4;8924:3;8920:14;8906:12;8872:63;:::i;:::-;8794:147;9014:4;9007:5;9003:16;8997:23;9026:63;9083:4;9078:3;9074:14;9060:12;9026:63;:::i;:::-;8951:144;9174:4;9167:5;9163:16;9157:23;9186:63;9243:4;9238:3;9234:14;9220:12;9186:63;:::i;:::-;9105:150;9272:4;9265:11;;7971:1310;;;;;:::o;9288:103::-;9361:24;9379:5;9361:24;:::i;:::-;9356:3;9349:37;9343:48;;:::o;9398:113::-;9481:24;9499:5;9481:24;:::i;:::-;9476:3;9469:37;9463:48;;:::o;9518:97::-;9587:22;9603:5;9587:22;:::i;:::-;9582:3;9575:35;9569:46;;:::o;9622:107::-;9701:22;9717:5;9701:22;:::i;:::-;9696:3;9689:35;9683:46;;:::o;9736:222::-;;9863:2;9852:9;9848:18;9840:26;;9877:71;9945:1;9934:9;9930:17;9921:6;9877:71;:::i;:::-;9834:124;;;;:::o;9965:238::-;;10100:2;10089:9;10085:18;10077:26;;10114:79;10190:1;10179:9;10175:17;10166:6;10114:79;:::i;:::-;10071:132;;;;:::o;10210:349::-;;10373:2;10362:9;10358:18;10350:26;;10387:79;10463:1;10452:9;10448:17;10439:6;10387:79;:::i;:::-;10477:72;10545:2;10534:9;10530:18;10521:6;10477:72;:::i;:::-;10344:215;;;;;:::o;10566:370::-;;10743:2;10732:9;10728:18;10720:26;;10793:9;10787:4;10783:20;10779:1;10768:9;10764:17;10757:47;10818:108;10921:4;10912:6;10818:108;:::i;:::-;10810:116;;10714:222;;;;:::o;10943:462::-;;11166:2;11155:9;11151:18;11143:26;;11216:9;11210:4;11206:20;11202:1;11191:9;11187:17;11180:47;11241:154;11390:4;11381:6;11241:154;:::i;:::-;11233:162;;11137:268;;;;:::o;11412:724::-;;11659:3;11648:9;11644:19;11636:27;;11710:9;11704:4;11700:20;11696:1;11685:9;11681:17;11674:47;11735:78;11808:4;11799:6;11735:78;:::i;:::-;11727:86;;11861:9;11855:4;11851:20;11846:2;11835:9;11831:18;11824:48;11886:78;11959:4;11950:6;11886:78;:::i;:::-;11878:86;;11975:72;12043:2;12032:9;12028:18;12019:6;11975:72;:::i;:::-;12058:68;12122:2;12111:9;12107:18;12098:6;12058:68;:::i;:::-;11630:506;;;;;;;:::o;12143:1060::-;;12474:3;12463:9;12459:19;12451:27;;12525:9;12519:4;12515:20;12511:1;12500:9;12496:17;12489:47;12550:78;12623:4;12614:6;12550:78;:::i;:::-;12542:86;;12676:9;12670:4;12666:20;12661:2;12650:9;12646:18;12639:48;12701:78;12774:4;12765:6;12701:78;:::i;:::-;12693:86;;12790:68;12854:2;12843:9;12839:18;12830:6;12790:68;:::i;:::-;12869:72;12937:2;12926:9;12922:18;12913:6;12869:72;:::i;:::-;12952:73;13020:3;13009:9;13005:19;12996:6;12952:73;:::i;:::-;13036;13104:3;13093:9;13089:19;13080:6;13036:73;:::i;:::-;13120;13188:3;13177:9;13173:19;13164:6;13120:73;:::i;:::-;12445:758;;;;;;;;;;:::o;13210:362::-;;13383:2;13372:9;13368:18;13360:26;;13433:9;13427:4;13423:20;13419:1;13408:9;13404:17;13397:47;13458:104;13557:4;13548:6;13458:104;:::i;:::-;13450:112;;13354:218;;;;:::o;13579:256::-;;13641:2;13635:9;13625:19;;13679:4;13671:6;13667:17;13778:6;13766:10;13763:22;13742:18;13730:10;13727:34;13724:62;13721:2;;;13799:1;13796;13789:12;13721:2;13819:10;13815:2;13808:22;13619:216;;;;:::o;13842:322::-;;13986:18;13978:6;13975:30;13972:2;;;14018:1;14015;14008:12;13972:2;14085:4;14081:9;14074:4;14066:6;14062:17;14058:33;14050:41;;14149:4;14143;14139:15;14131:23;;13909:255;;;:::o;14171:151::-;;14257:3;14249:11;;14295:4;14290:3;14286:14;14278:22;;14243:79;;;:::o;14329:174::-;;14438:3;14430:11;;14476:4;14471:3;14467:14;14459:22;;14424:79;;;:::o;14510:137::-;;14619:5;14613:12;14603:22;;14584:63;;;:::o;14654:160::-;;14786:5;14780:12;14770:22;;14751:63;;;:::o;14821:122::-;;14915:5;14909:12;14899:22;;14880:63;;;:::o;14950:108::-;;15048:4;15043:3;15039:14;15031:22;;15025:33;;;:::o;15065:131::-;;15186:4;15181:3;15177:14;15169:22;;15163:33;;;:::o;15204:178::-;;15334:6;15329:3;15322:19;15371:4;15366:3;15362:14;15347:29;;15315:67;;;;:::o;15391:201::-;;15544:6;15539:3;15532:19;15581:4;15576:3;15572:14;15557:29;;15525:67;;;;:::o;15601:153::-;;15706:6;15701:3;15694:19;15743:4;15738:3;15734:14;15719:29;;15687:67;;;;:::o;15763:163::-;;15878:6;15873:3;15866:19;15915:4;15910:3;15906:14;15891:29;;15859:67;;;;:::o;15934:91::-;;15996:24;16014:5;15996:24;:::i;:::-;15985:35;;15979:46;;;:::o;16032:85::-;;16105:5;16098:13;16091:21;16080:32;;16074:43;;;:::o;16124:121::-;;16197:42;16190:5;16186:54;16175:65;;16169:76;;;:::o;16252:72::-;;16314:5;16303:16;;16297:27;;;:::o;16331:81::-;;16402:4;16395:5;16391:16;16380:27;;16374:38;;;:::o;16419:129::-;;16506:37;16537:5;16506:37;:::i;:::-;16493:50;;16487:61;;;:::o;16555:121::-;;16634:37;16665:5;16634:37;:::i;:::-;16621:50;;16615:61;;;:::o;16683:108::-;;16762:24;16780:5;16762:24;:::i;:::-;16749:37;;16743:48;;;:::o;16799:145::-;16880:6;16875:3;16870;16857:30;16936:1;16927:6;16922:3;16918:16;16911:27;16850:94;;;:::o;16953:268::-;17018:1;17025:101;17039:6;17036:1;17033:13;17025:101;;;17115:1;17110:3;17106:11;17100:18;17096:1;17091:3;17087:11;17080:39;17061:2;17058:1;17054:10;17049:15;;17025:101;;;17141:6;17138:1;17135:13;17132:2;;;17206:1;17197:6;17192:3;17188:16;17181:27;17132:2;17002:219;;;;:::o;17229:97::-;;17317:2;17313:7;17308:2;17301:5;17297:14;17293:28;17283:38;;17277:49;;;:::o;17334:117::-;17403:24;17421:5;17403:24;:::i;:::-;17396:5;17393:35;17383:2;;17442:1;17439;17432:12;17383:2;17377:74;:::o;17458:111::-;17524:21;17539:5;17524:21;:::i;:::-;17517:5;17514:32;17504:2;;17560:1;17557;17550:12;17504:2;17498:71;:::o;17576:117::-;17645:24;17663:5;17645:24;:::i;:::-;17638:5;17635:35;17625:2;;17684:1;17681;17674:12;17625:2;17619:74;:::o;17700:113::-;17767:22;17783:5;17767:22;:::i;:::-;17760:5;17757:33;17747:2;;17804:1;17801;17794:12;17747:2;17741:72;:::o",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC20.sol\";\ncontract ERC20Factory {\n    event Issue(Token token);\n\n    struct Token {\n        string name;\n        string symbol;\n        uint8 decimal;\n        uint256 totalSupply;\n        address creator;\n        address addr;\n        uint256 createTime;\n    }\n\n    mapping(address => address[]) public created;\n    Token[] public tokens;\n\n    function createERC20(\n        uint256 initialAmount,\n        string memory name,\n        uint8 decimal,\n        string memory symbol\n    ) public{\n        ERC20 newToken = (new ERC20(name, symbol, initialAmount, decimal));\n        created[msg.sender].push(address(newToken));\n        Token memory token = Token(name, symbol, decimal, initialAmount, msg.sender, address(newToken), block.timestamp);        \n        newToken.transfer(msg.sender, initialAmount);\n        newToken.transferOwnership(msg.sender);\n        tokens.push(token);\n        emit Issue(token);\n    }\n\n    function _codeAt(address addr)\n        internal\n        view\n        returns (bytes memory outputCode)\n    {\n        assembly {\n            // solhint-disable-line no-inline-assembly\n            let size := extcodesize(addr)\n            outputCode := mload(0x40)\n            mstore(\n                0x40,\n                add(outputCode, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n            )\n            mstore(outputCode, size)\n            extcodecopy(addr, add(outputCode, 0x20), 0, size)\n        }\n    }\n\n    function getCreated(address addr) public view returns(address[] memory) {\n        return created[addr];\n    }\n    function getTokens() public view returns(Token[] memory){\n        return tokens;\n    }\n\n}\n",
  "sourcePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
  "ast": {
    "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
    "exportedSymbols": {
      "ERC20Factory": [
        1176
      ]
    },
    "id": 1177,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1039,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:6"
      },
      {
        "id": 1040,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:6"
      },
      {
        "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1041,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 913,
        "src": "101:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          912
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176
        ],
        "name": "ERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1045,
            "name": "Issue",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1045,
                  "src": "163:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                    "typeString": "struct ERC20Factory.Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1042,
                    "name": "Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1060,
                    "src": "163:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                      "typeString": "struct ERC20Factory.Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:13:6"
            },
            "src": "151:25:6"
          },
          {
            "canonicalName": "ERC20Factory.Token",
            "id": 1060,
            "members": [
              {
                "constant": false,
                "id": 1047,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "205:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1046,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "205:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1049,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "226:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1048,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1051,
                "mutability": "mutable",
                "name": "decimal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "249:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1050,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1053,
                "mutability": "mutable",
                "name": "totalSupply",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "272:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1052,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1055,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "301:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1054,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1057,
                "mutability": "mutable",
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "326:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1056,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1059,
                "mutability": "mutable",
                "name": "createTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "348:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1058,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "348:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nodeType": "StructDefinition",
            "scope": 1176,
            "src": "182:191:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f8dead3",
            "id": 1065,
            "mutability": "mutable",
            "name": "created",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1176,
            "src": "379:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 1064,
              "keyType": {
                "id": 1061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "379:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1062,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "398:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1063,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "398:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 1068,
            "mutability": "mutable",
            "name": "tokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1176,
            "src": "429:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
              "typeString": "struct ERC20Factory.Token[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1066,
                "name": "Token",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1060,
                "src": "429:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                  "typeString": "struct ERC20Factory.Token"
                }
              },
              "id": 1067,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "429:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Factory.Token[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "602:423:6",
              "statements": [
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1143,
                      "src": "612:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$912",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1079,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 912,
                        "src": "612:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1083,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "640:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1084,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "646:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1085,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "654:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1086,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "669:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "630:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_ERC20_$912_$",
                            "typeString": "function (string memory,string memory,uint256,uint8) returns (contract ERC20)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 1081,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 912,
                            "src": "634:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "630:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "id": 1088,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "629:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$912",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "612:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1097,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "721:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "713:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "713:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1090,
                          "name": "created",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "688:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 1093,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1091,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "696:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "696:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "688:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "688:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "688:43:6"
                },
                {
                  "assignments": [
                    1102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1102,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1143,
                      "src": "741:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1101,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1060,
                        "src": "741:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                          "typeString": "struct ERC20Factory.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1117,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1104,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "768:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "774:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1106,
                        "name": "decimal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "782:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "791:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "806:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "806:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1112,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "826:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "818:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "818:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "818:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "837:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "837:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1103,
                      "name": "Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1060,
                      "src": "762:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Token_$1060_storage_ptr_$",
                        "typeString": "type(struct ERC20Factory.Token storage pointer)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:91:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                      "typeString": "struct ERC20Factory.Token memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "741:112:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "889:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1123,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "901:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "871:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "871:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "871:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "952:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "952:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1126,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "925:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1499,
                      "src": "925:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "925:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1136,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "985:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "973:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
                          "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "973:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Token_$1060_storage_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token storage ref)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "973:18:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "1012:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "id": 1139,
                      "name": "Issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "1006:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Token_$1060_memory_ptr_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token memory)"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "EmitStatement",
                  "src": "1001:17:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6791322",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "487:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "518:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "decimal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "546:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "569:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:118:6"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:6"
            },
            "scope": 1176,
            "src": "457:568:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "1138:402:6",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1157:377:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1226:29:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1250:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1238:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1238:17:6"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1230:4:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1268:25:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1288:4:6",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:11:6"
                        },
                        "variableNames": [
                          {
                            "name": "outputCode",
                            "nodeType": "YulIdentifier",
                            "src": "1268:10:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1330:4:6",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:10:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "size",
                                              "nodeType": "YulIdentifier",
                                              "src": "1380:4:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1386:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1376:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1376:15:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1393:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1372:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1372:26:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1404:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1400:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1368:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1368:42:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1352:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1352:59:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:119:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:119:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "outputCode",
                              "nodeType": "YulIdentifier",
                              "src": "1445:10:6"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1457:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1438:24:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1438:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1487:4:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:10:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1509:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1493:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1493:21:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1516:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1519:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "1475:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1475:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1475:49:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1146,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1250:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1146,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1487:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1268:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1356:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1445:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1497:10:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1151,
                  "nodeType": "InlineAssembly",
                  "src": "1148:386:6"
                }
              ]
            },
            "documentation": null,
            "id": 1153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_codeAt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1153,
                  "src": "1048:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1047:14:6"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "outputCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1153,
                  "src": "1109:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:25:6"
            },
            "scope": 1176,
            "src": "1031:509:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1618:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1161,
                      "name": "created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "1635:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1163,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1162,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "1643:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1635:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1160,
                  "id": 1164,
                  "nodeType": "Return",
                  "src": "1628:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef98992",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreated",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1166,
                  "src": "1566:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:14:6"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1166,
                  "src": "1600:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1157,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1600:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1600:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:18:6"
            },
            "scope": 1176,
            "src": "1546:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "1716:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1172,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1068,
                    "src": "1733:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
                      "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1171,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "1726:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa6ca808",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:2:6"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "1701:14:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$1060_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20Factory.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1168,
                      "name": "Token",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1060,
                      "src": "1701:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      }
                    },
                    "id": 1169,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1701:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Factory.Token[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1700:16:6"
            },
            "scope": 1176,
            "src": "1660:86:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "123:1626:6"
      }
    ],
    "src": "33:1717:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
    "exportedSymbols": {
      "ERC20Factory": [
        1176
      ]
    },
    "id": 1177,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1039,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:6"
      },
      {
        "id": 1040,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:6"
      },
      {
        "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1041,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 913,
        "src": "101:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          912
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176
        ],
        "name": "ERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 1045,
            "name": "Issue",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1045,
                  "src": "163:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                    "typeString": "struct ERC20Factory.Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1042,
                    "name": "Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1060,
                    "src": "163:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                      "typeString": "struct ERC20Factory.Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "162:13:6"
            },
            "src": "151:25:6"
          },
          {
            "canonicalName": "ERC20Factory.Token",
            "id": 1060,
            "members": [
              {
                "constant": false,
                "id": 1047,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "205:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1046,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "205:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1049,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "226:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1048,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1051,
                "mutability": "mutable",
                "name": "decimal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "249:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1050,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1053,
                "mutability": "mutable",
                "name": "totalSupply",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "272:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1052,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1055,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "301:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1054,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "301:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1057,
                "mutability": "mutable",
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "326:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1056,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "326:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1059,
                "mutability": "mutable",
                "name": "createTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1060,
                "src": "348:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1058,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "348:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nodeType": "StructDefinition",
            "scope": 1176,
            "src": "182:191:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f8dead3",
            "id": 1065,
            "mutability": "mutable",
            "name": "created",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1176,
            "src": "379:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 1064,
              "keyType": {
                "id": 1061,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "387:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "379:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1062,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "398:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1063,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "398:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 1068,
            "mutability": "mutable",
            "name": "tokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1176,
            "src": "429:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
              "typeString": "struct ERC20Factory.Token[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1066,
                "name": "Token",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1060,
                "src": "429:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                  "typeString": "struct ERC20Factory.Token"
                }
              },
              "id": 1067,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "429:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Factory.Token[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "602:423:6",
              "statements": [
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1143,
                      "src": "612:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$912",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1079,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 912,
                        "src": "612:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1083,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "640:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1084,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "646:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1085,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1070,
                            "src": "654:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1086,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "669:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "630:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_ERC20_$912_$",
                            "typeString": "function (string memory,string memory,uint256,uint8) returns (contract ERC20)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 1081,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 912,
                            "src": "634:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "630:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "id": 1088,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "629:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$912",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "612:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1097,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "721:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "713:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1095,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "713:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1090,
                          "name": "created",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "688:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 1093,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1091,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "696:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "696:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "688:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "688:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "688:43:6"
                },
                {
                  "assignments": [
                    1102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1102,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1143,
                      "src": "741:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1101,
                        "name": "Token",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1060,
                        "src": "741:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                          "typeString": "struct ERC20Factory.Token"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1117,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1104,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "768:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "774:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1106,
                        "name": "decimal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "782:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "791:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "806:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "806:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1112,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "826:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$912",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "818:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "818:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "818:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "837:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "837:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1103,
                      "name": "Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1060,
                      "src": "762:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Token_$1060_storage_ptr_$",
                        "typeString": "type(struct ERC20Factory.Token storage pointer)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:91:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                      "typeString": "struct ERC20Factory.Token memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "741:112:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "889:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "889:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1123,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "901:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "871:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 579,
                      "src": "871:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1125,
                  "nodeType": "ExpressionStatement",
                  "src": "871:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1129,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "952:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "952:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1126,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1080,
                        "src": "925:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$912",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1499,
                      "src": "925:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "925:38:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1136,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "985:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "973:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
                          "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "973:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Token_$1060_storage_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token storage ref)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:18:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "973:18:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "1012:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1060_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "id": 1139,
                      "name": "Issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "1006:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Token_$1060_memory_ptr_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token memory)"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:12:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "EmitStatement",
                  "src": "1001:17:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6791322",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "487:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "518:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "decimal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "546:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1144,
                  "src": "569:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "477:118:6"
            },
            "returnParameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:6"
            },
            "scope": 1176,
            "src": "457:568:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "1138:402:6",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1157:377:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1226:29:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1250:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1238:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1238:17:6"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1230:4:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1268:25:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1288:4:6",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:11:6"
                        },
                        "variableNames": [
                          {
                            "name": "outputCode",
                            "nodeType": "YulIdentifier",
                            "src": "1268:10:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1330:4:6",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:10:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "size",
                                              "nodeType": "YulIdentifier",
                                              "src": "1380:4:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1386:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1376:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1376:15:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1393:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1372:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1372:26:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1404:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1400:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1368:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1368:42:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1352:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1352:59:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1306:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1306:119:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1306:119:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "outputCode",
                              "nodeType": "YulIdentifier",
                              "src": "1445:10:6"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1457:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1438:24:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1438:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1487:4:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1497:10:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1509:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1493:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1493:21:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1516:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1519:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "1475:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1475:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1475:49:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1146,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1250:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1146,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1487:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1268:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1356:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1445:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1149,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1497:10:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1151,
                  "nodeType": "InlineAssembly",
                  "src": "1148:386:6"
                }
              ]
            },
            "documentation": null,
            "id": 1153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_codeAt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1153,
                  "src": "1048:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1047:14:6"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "outputCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1153,
                  "src": "1109:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1108:25:6"
            },
            "scope": 1176,
            "src": "1031:509:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "1618:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1161,
                      "name": "created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "1635:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1163,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1162,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "1643:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1635:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1160,
                  "id": 1164,
                  "nodeType": "Return",
                  "src": "1628:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef98992",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreated",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1166,
                  "src": "1566:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1565:14:6"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1166,
                  "src": "1600:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1157,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1600:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1158,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1600:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1599:18:6"
            },
            "scope": 1176,
            "src": "1546:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "1716:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1172,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1068,
                    "src": "1733:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage",
                      "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1171,
                  "id": 1173,
                  "nodeType": "Return",
                  "src": "1726:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa6ca808",
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:2:6"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1175,
                  "src": "1701:14:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$1060_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20Factory.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1168,
                      "name": "Token",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1060,
                      "src": "1701:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1060_storage_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      }
                    },
                    "id": 1169,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1701:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1060_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Factory.Token[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1700:16:6"
            },
            "scope": 1176,
            "src": "1660:86:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "123:1626:6"
      }
    ],
    "src": "33:1717:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xeb56dce6579f82c8b1e33a1ff40a343a5cdc437965cd2aba769cc6b16839d92e": {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "decimal",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "indexed": false,
              "internalType": "struct ERC20Factory.Token",
              "name": "token",
              "type": "tuple"
            }
          ],
          "name": "Issue",
          "type": "event"
        },
        "0x3a217e7f61e36178097f900c37d21a998dd748bc0e1a052bbf9470487eee0996": {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "decimal",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "creator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "createTime",
                  "type": "uint256"
                }
              ],
              "indexed": false,
              "internalType": "struct ERC20Factory.Token",
              "name": "token",
              "type": "tuple"
            }
          ],
          "name": "Issue",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x099FAcC3a7b71bAf46080F49373dedA39Cce6b8C",
      "transactionHash": "0x20cbfda519f25e2a9f78fe4cc67545ab43fa2040f8f32bd1989cb11469d19a0c"
    }
  },
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-08-21T06:31:06.148Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}