{
  "contractName": "ERC20Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "created",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialAmount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimal",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getCreated",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimal",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "internalType": "struct ERC20Factory.Token[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getCreated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct ERC20Factory.Token[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimal\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol\":\"ERC20Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol\":{\"keccak256\":\"0xae8015584dc31019ac63735dbaac7c57c0a7f10cf8fe4bc7e26194276d3c5177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ccc4d5ed807e7e2d043f7b0b625f33afdf97002c2cc8265d536b6b65353577d\",\"dweb:/ipfs/QmPYbvJ9VfX2N5Vqt7CpRGaSZjFms5MWYwYSD6CgPkD6qa\"]},\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol\":{\"keccak256\":\"0x926a48722862c9229eb64604dcbb1faacb0a615e9bc468718900010173a01b30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b47fff290383408e818e34ae7f45104a693396f18000426b6c3d6120bf04517\",\"dweb:/ipfs/QmXkJohhrtDpn3z2yDVMhDUhihEkSPbk8dEcjzkHDyCXpY\"]},\"/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/IERC20.sol\":{\"keccak256\":\"0x45aaff2cbe37d23c846bfa34731b00682535628a8bcfdeb228befa09524b6a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d6f4088d7a97b7d851af4acceb9df19fece481194468298060b41de731ee358\",\"dweb:/ipfs/QmRDANQ1ajduQoahpiVgzuqwGeEBT3oYzQ5ACEQvfTpCkV\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630ef9899214620000635780634f64b2be14620000995780635f8dead314620000d4578063aa6ca808146200010a578063b6791322146200012c575b600080fd5b6200008160048036038101906200007b919062000b43565b62000162565b60405162000090919062000fa0565b60405180910390f35b620000b76004803603810190620000b1919062000bdc565b62000230565b604051620000cb9695949392919062001043565b60405180910390f35b620000f26004803603810190620000ec919062000b6f565b620003ff565b60405162000101919062000f56565b60405180910390f35b620001146200044b565b60405162000123919062000fc4565b60405180910390f35b6200014a600480360381019062000144919062000c08565b620006cb565b60405162000159919062000f56565b60405180910390f35b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156200022457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620001d9575b50505050509050919050565b600181815481106200023e57fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620002ee5780601f10620002c257610100808354040283529160200191620002ee565b820191906000526020600020905b815481529060010190602001808311620002d057829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620003905780601f10620003645761010080835404028352916020019162000390565b820191906000526020600020905b8154815290600101906020018083116200037257829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600060205281600052604060002081815481106200041957fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015620006c257838290600052602060002090600602016040518060c0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620005305780601f10620005045761010080835404028352916020019162000530565b820191906000526020600020905b8154815290600101906020018083116200051257829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620005d65780601f10620005aa57610100808354040283529160200191620005d6565b820191906000526020600020905b815481529060010190602001808311620005b857829003601f168201915b505050505081526020016002820160009054906101000a900460ff1660ff1660ff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906200046f565b50505050905090565b60008084838786604051620006e090620009ce565b620006ef949392919062000fe8565b604051809103906000f0801580156200070c573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016040518060c001604052808781526020018581526020018660ff1681526020018881526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001908051906020019062000853929190620009dc565b50602082015181600101908051906020019062000872929190620009dc565b5060408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886040518363ffffffff1660e01b81526004016200096b92919062000f73565b602060405180830381600087803b1580156200098657600080fd5b505af11580156200099b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c1919062000bb0565b5080915050949350505050565b6113d6806200130a83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000a1f57805160ff191683800117855562000a50565b8280016001018555821562000a50579182015b8281111562000a4f57825182559160200191906001019062000a32565b5b50905062000a5f919062000a63565b5090565b62000a8891905b8082111562000a8457600081600090555060010162000a6a565b5090565b90565b60008135905062000a9c81620012a1565b92915050565b60008151905062000ab381620012bb565b92915050565b600082601f83011262000acb57600080fd5b813562000ae262000adc82620010ec565b620010be565b9150808252602083016020830185838301111562000aff57600080fd5b62000b0c8382846200124b565b50505092915050565b60008135905062000b2681620012d5565b92915050565b60008135905062000b3d81620012ef565b92915050565b60006020828403121562000b5657600080fd5b600062000b668482850162000a8b565b91505092915050565b6000806040838503121562000b8357600080fd5b600062000b938582860162000a8b565b925050602062000ba68582860162000b15565b9150509250929050565b60006020828403121562000bc357600080fd5b600062000bd38482850162000aa2565b91505092915050565b60006020828403121562000bef57600080fd5b600062000bff8482850162000b15565b91505092915050565b6000806000806080858703121562000c1f57600080fd5b600062000c2f8782880162000b15565b945050602085013567ffffffffffffffff81111562000c4d57600080fd5b62000c5b8782880162000ab9565b935050604062000c6e8782880162000b2c565b925050606085013567ffffffffffffffff81111562000c8c57600080fd5b62000c9a8782880162000ab9565b91505092959194509250565b600062000cb4838362000ce7565b60208301905092915050565b600062000cce838362000e76565b905092915050565b62000ce1816200120f565b82525050565b62000cf281620011b8565b82525050565b62000d0381620011b8565b82525050565b600062000d168262001139565b62000d22818562001174565b935062000d2f8362001119565b8060005b8381101562000d6657815162000d4a888262000ca6565b975062000d57836200115a565b92505060018101905062000d33565b5085935050505092915050565b600062000d808262001144565b62000d8c818562001185565b93508360208202850162000da08562001129565b8060005b8581101562000de2578484038952815162000dc0858262000cc0565b945062000dcd8362001167565b925060208a0199505060018101905062000da4565b50829750879550505050505092915050565b600062000e01826200114f565b62000e0d818562001196565b935062000e1f8185602086016200125a565b62000e2a8162001290565b840191505092915050565b600062000e42826200114f565b62000e4e8185620011a7565b935062000e608185602086016200125a565b62000e6b8162001290565b840191505092915050565b600060c083016000830151848203600086015262000e95828262000df4565b9150506020830151848203602086015262000eb1828262000df4565b915050604083015162000ec8604086018262000f34565b50606083015162000edd606086018262000f12565b50608083015162000ef2608086018262000ce7565b5060a083015162000f0760a086018262000ce7565b508091505092915050565b62000f1d81620011f8565b82525050565b62000f2e81620011f8565b82525050565b62000f3f8162001202565b82525050565b62000f508162001202565b82525050565b600060208201905062000f6d600083018462000cf8565b92915050565b600060408201905062000f8a600083018562000cd6565b62000f99602083018462000f23565b9392505050565b6000602082019050818103600083015262000fbc818462000d09565b905092915050565b6000602082019050818103600083015262000fe0818462000d73565b905092915050565b6000608082019050818103600083015262001004818762000e35565b905081810360208301526200101a818662000e35565b90506200102b604083018562000f23565b6200103a606083018462000f45565b95945050505050565b600060c08201905081810360008301526200105f818962000e35565b9050818103602083015262001075818862000e35565b905062001086604083018762000f45565b62001095606083018662000f23565b620010a4608083018562000cf8565b620010b360a083018462000cf8565b979650505050505050565b6000604051905081810181811067ffffffffffffffff82111715620010e257600080fd5b8060405250919050565b600067ffffffffffffffff8211156200110457600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620011c582620011d8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006200121c8262001223565b9050919050565b6000620012308262001237565b9050919050565b60006200124482620011d8565b9050919050565b82818337600083830152505050565b60005b838110156200127a5780820151818401526020810190506200125d565b838111156200128a576000848401525b50505050565b6000601f19601f8301169050919050565b620012ac81620011b8565b8114620012b857600080fd5b50565b620012c681620011cc565b8114620012d257600080fd5b50565b620012e081620011f8565b8114620012ec57600080fd5b50565b620012fa8162001202565b81146200130657600080fd5b5056fe60806040523480156200001157600080fd5b50604051620013d6380380620013d6833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360039080519060200190620001e49291906200026d565b508260049080519060200190620001fd9291906200026d565b5080600560006101000a81548160ff021916908360ff16021790555081600281905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200031c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002b057805160ff1916838001178555620002e1565b82800160010185558215620002e1579182015b82811115620002e0578251825591602001919060010190620002c3565b5b509050620002f09190620002f4565b5090565b6200031991905b8082111562000315576000816000905550600101620002fb565b5090565b90565b6110aa806200032c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025f57806370a08231146102c557806395d89b411461031d578063a457c2d7146103a0578063a9059cbb14610406578063dd62ed3e1461046c576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019757806323b872dd146101b5578063313ce5671461023b575b600080fd5b6100b66104e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610586565b604051808215151515815260200191505060405180910390f35b61019f61059d565b6040518082815260200191505060405180910390f35b610221600480360360608110156101cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a7565b604051808215151515815260200191505060405180910390f35b61024361066e565b604051808260ff1660ff16815260200191505060405180910390f35b6102ab6004803603604081101561027557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610685565b604051808215151515815260200191505060405180910390f35b610307600480360360208110156102db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072a565b6040518082815260200191505060405180910390f35b610325610772565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561036557808201518184015260208101905061034a565b50505050905090810190601f1680156103925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103ec600480360360408110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610814565b604051808215151515815260200191505060405180910390f35b6104526004803603604081101561041c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108d3565b604051808215151515815260200191505060405180910390f35b6104ce6004803603604081101561048257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e6565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050905090565b600061059333848461096d565b6001905092915050565b6000600254905090565b60006105b4848484610b64565b610667843361066285604051806060016040528060288152602001610fdf60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e259092919063ffffffff16565b61096d565b9392505050565b6000600560009054906101000a900460ff16905090565b6000610720338461071b85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ee590919063ffffffff16565b61096d565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561080a5780601f106107df5761010080835404028352916020019161080a565b820191906000526020600020905b8154815290600101906020018083116107ed57829003601f168201915b5050505050905090565b60006108c933846108c48560405180606001604052806025815260200161105060259139600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e259092919063ffffffff16565b61096d565b6001905092915050565b60006108e0338484610b64565b92915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061102c6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f966022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806110076025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610f736023913960400191505060405180910390fd5b610c7b838383610f6d565b610ce681604051806060016040528060278152602001610fb8602791396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e259092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d79816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ee590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610ed2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e97578082015181840152602081019050610e7c565b50505050905090810190601f168015610ec45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610f63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e742065786563656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656174656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220136f3e6430a03abcc9a7dc819aeb6d4e962149a7666e5d40992b8dc6e0322e6664736f6c634300060b0033a26469706673582212207089fa2d312c741b9c3e6d079a898a993ec3829b15fbd39364b1f3f577c71f3764736f6c634300060b0033",
  "immutableReferences": {},
  "sourceMap": "123:1484:6:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "123:1484:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:21;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;320:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1518:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;398:485;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1404:109;1458:16;1493:7;:13;1501:4;1493:13;;;;;;;;;;;;;;;1486:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:109;;;:::o;370:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;320:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1518:86::-;1559:14;1591:6;1584:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1518:86;:::o;398:485::-;553:7;572:14;600:4;606:6;614:13;629:7;590:47;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;572:66;;648:7;:19;656:10;648:19;;;;;;;;;;;;;;;681:8;648:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;701:6;713:74;;;;;;;;719:4;713:74;;;;725:6;713:74;;;;733:7;713:74;;;;;;742:13;713:74;;;;757:10;713:74;;;;;;777:8;713:74;;;;;701:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:8;:17;;;816:10;828:13;798:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;867:8;852:24;;;398:485;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;278:442::-;;380:3;373:4;365:6;361:17;357:27;347:2;;398:1;395;388:12;347:2;435:6;422:20;457:65;472:49;514:6;472:49;:::i;:::-;457:65;:::i;:::-;448:74;;542:6;535:5;528:21;578:4;570:6;566:17;611:4;604:5;600:16;646:3;637:6;632:3;628:16;625:25;622:2;;;663:1;660;653:12;622:2;673:41;707:6;702:3;697;673:41;:::i;:::-;340:380;;;;;;;:::o;728:130::-;;808:6;795:20;786:29;;820:33;847:5;820:33;:::i;:::-;780:78;;;;:::o;865:126::-;;943:6;930:20;921:29;;955:31;980:5;955:31;:::i;:::-;915:76;;;;:::o;998:241::-;;1102:2;1090:9;1081:7;1077:23;1073:32;1070:2;;;1118:1;1115;1108:12;1070:2;1153:1;1170:53;1215:7;1206:6;1195:9;1191:22;1170:53;:::i;:::-;1160:63;;1132:97;1064:175;;;;:::o;1246:366::-;;;1367:2;1355:9;1346:7;1342:23;1338:32;1335:2;;;1383:1;1380;1373:12;1335:2;1418:1;1435:53;1480:7;1471:6;1460:9;1456:22;1435:53;:::i;:::-;1425:63;;1397:97;1525:2;1543:53;1588:7;1579:6;1568:9;1564:22;1543:53;:::i;:::-;1533:63;;1504:98;1329:283;;;;;:::o;1619:257::-;;1731:2;1719:9;1710:7;1706:23;1702:32;1699:2;;;1747:1;1744;1737:12;1699:2;1782:1;1799:61;1852:7;1843:6;1832:9;1828:22;1799:61;:::i;:::-;1789:71;;1761:105;1693:183;;;;:::o;1883:241::-;;1987:2;1975:9;1966:7;1962:23;1958:32;1955:2;;;2003:1;2000;1993:12;1955:2;2038:1;2055:53;2100:7;2091:6;2080:9;2076:22;2055:53;:::i;:::-;2045:63;;2017:97;1949:175;;;;:::o;2131:825::-;;;;;2304:3;2292:9;2283:7;2279:23;2275:33;2272:2;;;2321:1;2318;2311:12;2272:2;2356:1;2373:53;2418:7;2409:6;2398:9;2394:22;2373:53;:::i;:::-;2363:63;;2335:97;2491:2;2480:9;2476:18;2463:32;2515:18;2507:6;2504:30;2501:2;;;2547:1;2544;2537:12;2501:2;2567:63;2622:7;2613:6;2602:9;2598:22;2567:63;:::i;:::-;2557:73;;2442:194;2667:2;2685:51;2728:7;2719:6;2708:9;2704:22;2685:51;:::i;:::-;2675:61;;2646:96;2801:2;2790:9;2786:18;2773:32;2825:18;2817:6;2814:30;2811:2;;;2857:1;2854;2847:12;2811:2;2877:63;2932:7;2923:6;2912:9;2908:22;2877:63;:::i;:::-;2867:73;;2752:194;2266:690;;;;;;;:::o;2964:173::-;;3051:46;3093:3;3085:6;3051:46;:::i;:::-;3126:4;3121:3;3117:14;3103:28;;3044:93;;;;:::o;3146:245::-;;3293:92;3381:3;3373:6;3293:92;:::i;:::-;3279:106;;3272:119;;;;:::o;3399:142::-;3490:45;3529:5;3490:45;:::i;:::-;3485:3;3478:58;3472:69;;:::o;3548:103::-;3621:24;3639:5;3621:24;:::i;:::-;3616:3;3609:37;3603:48;;:::o;3658:113::-;3741:24;3759:5;3741:24;:::i;:::-;3736:3;3729:37;3723:48;;:::o;3809:690::-;;3954:54;4002:5;3954:54;:::i;:::-;4021:86;4100:6;4095:3;4021:86;:::i;:::-;4014:93;;4128:56;4178:5;4128:56;:::i;:::-;4204:7;4232:1;4217:260;4242:6;4239:1;4236:13;4217:260;;;4309:6;4303:13;4330:63;4389:3;4374:13;4330:63;:::i;:::-;4323:70;;4410:60;4463:6;4410:60;:::i;:::-;4400:70;;4274:203;4264:1;4261;4257:9;4252:14;;4217:260;;;4221:14;4490:3;4483:10;;3933:566;;;;;;;:::o;4574:1032::-;;4765:77;4836:5;4765:77;:::i;:::-;4855:109;4957:6;4952:3;4855:109;:::i;:::-;4848:116;;4987:3;5029:4;5021:6;5017:17;5012:3;5008:27;5056:79;5129:5;5056:79;:::i;:::-;5155:7;5183:1;5168:399;5193:6;5190:1;5187:13;5168:399;;;5255:9;5249:4;5245:20;5240:3;5233:33;5300:6;5294:13;5322:110;5427:4;5412:13;5322:110;:::i;:::-;5314:118;;5449:83;5525:6;5449:83;:::i;:::-;5439:93;;5555:4;5550:3;5546:14;5539:21;;5225:342;5215:1;5212;5208:9;5203:14;;5168:399;;;5172:14;5580:4;5573:11;;5597:3;5590:10;;4744:862;;;;;;;;;:::o;5614:327::-;;5716:39;5749:5;5716:39;:::i;:::-;5767:61;5821:6;5816:3;5767:61;:::i;:::-;5760:68;;5833:52;5878:6;5873:3;5866:4;5859:5;5855:16;5833:52;:::i;:::-;5906:29;5928:6;5906:29;:::i;:::-;5901:3;5897:39;5890:46;;5696:245;;;;;:::o;5948:347::-;;6060:39;6093:5;6060:39;:::i;:::-;6111:71;6175:6;6170:3;6111:71;:::i;:::-;6104:78;;6187:52;6232:6;6227:3;6220:4;6213:5;6209:16;6187:52;:::i;:::-;6260:29;6282:6;6260:29;:::i;:::-;6255:3;6251:39;6244:46;;6040:255;;;;;:::o;6363:1260::-;;6500:4;6495:3;6491:14;6583:4;6576:5;6572:16;6566:23;6635:3;6629:4;6625:14;6618:4;6613:3;6609:14;6602:38;6655:73;6723:4;6709:12;6655:73;:::i;:::-;6647:81;;6520:220;6815:4;6808:5;6804:16;6798:23;6867:3;6861:4;6857:14;6850:4;6845:3;6841:14;6834:38;6887:73;6955:4;6941:12;6887:73;:::i;:::-;6879:81;;6750:222;7048:4;7041:5;7037:16;7031:23;7060:59;7113:4;7108:3;7104:14;7090:12;7060:59;:::i;:::-;6982:143;7205:4;7198:5;7194:16;7188:23;7217:63;7274:4;7269:3;7265:14;7251:12;7217:63;:::i;:::-;7135:151;7362:4;7355:5;7351:16;7345:23;7374:63;7431:4;7426:3;7422:14;7408:12;7374:63;:::i;:::-;7296:147;7516:4;7509:5;7505:16;7499:23;7528:63;7585:4;7580:3;7576:14;7562:12;7528:63;:::i;:::-;7453:144;7614:4;7607:11;;6473:1150;;;;;:::o;7630:103::-;7703:24;7721:5;7703:24;:::i;:::-;7698:3;7691:37;7685:48;;:::o;7740:113::-;7823:24;7841:5;7823:24;:::i;:::-;7818:3;7811:37;7805:48;;:::o;7860:97::-;7929:22;7945:5;7929:22;:::i;:::-;7924:3;7917:35;7911:46;;:::o;7964:107::-;8043:22;8059:5;8043:22;:::i;:::-;8038:3;8031:35;8025:46;;:::o;8078:222::-;;8205:2;8194:9;8190:18;8182:26;;8219:71;8287:1;8276:9;8272:17;8263:6;8219:71;:::i;:::-;8176:124;;;;:::o;8307:349::-;;8470:2;8459:9;8455:18;8447:26;;8484:79;8560:1;8549:9;8545:17;8536:6;8484:79;:::i;:::-;8574:72;8642:2;8631:9;8627:18;8618:6;8574:72;:::i;:::-;8441:215;;;;;:::o;8663:370::-;;8840:2;8829:9;8825:18;8817:26;;8890:9;8884:4;8880:20;8876:1;8865:9;8861:17;8854:47;8915:108;9018:4;9009:6;8915:108;:::i;:::-;8907:116;;8811:222;;;;:::o;9040:462::-;;9263:2;9252:9;9248:18;9240:26;;9313:9;9307:4;9303:20;9299:1;9288:9;9284:17;9277:47;9338:154;9487:4;9478:6;9338:154;:::i;:::-;9330:162;;9234:268;;;;:::o;9509:724::-;;9756:3;9745:9;9741:19;9733:27;;9807:9;9801:4;9797:20;9793:1;9782:9;9778:17;9771:47;9832:78;9905:4;9896:6;9832:78;:::i;:::-;9824:86;;9958:9;9952:4;9948:20;9943:2;9932:9;9928:18;9921:48;9983:78;10056:4;10047:6;9983:78;:::i;:::-;9975:86;;10072:72;10140:2;10129:9;10125:18;10116:6;10072:72;:::i;:::-;10155:68;10219:2;10208:9;10204:18;10195:6;10155:68;:::i;:::-;9727:506;;;;;;;:::o;10240:948::-;;10543:3;10532:9;10528:19;10520:27;;10594:9;10588:4;10584:20;10580:1;10569:9;10565:17;10558:47;10619:78;10692:4;10683:6;10619:78;:::i;:::-;10611:86;;10745:9;10739:4;10735:20;10730:2;10719:9;10715:18;10708:48;10770:78;10843:4;10834:6;10770:78;:::i;:::-;10762:86;;10859:68;10923:2;10912:9;10908:18;10899:6;10859:68;:::i;:::-;10938:72;11006:2;10995:9;10991:18;10982:6;10938:72;:::i;:::-;11021:73;11089:3;11078:9;11074:19;11065:6;11021:73;:::i;:::-;11105;11173:3;11162:9;11158:19;11149:6;11105:73;:::i;:::-;10514:674;;;;;;;;;:::o;11195:256::-;;11257:2;11251:9;11241:19;;11295:4;11287:6;11283:17;11394:6;11382:10;11379:22;11358:18;11346:10;11343:34;11340:62;11337:2;;;11415:1;11412;11405:12;11337:2;11435:10;11431:2;11424:22;11235:216;;;;:::o;11458:322::-;;11602:18;11594:6;11591:30;11588:2;;;11634:1;11631;11624:12;11588:2;11701:4;11697:9;11690:4;11682:6;11678:17;11674:33;11666:41;;11765:4;11759;11755:15;11747:23;;11525:255;;;:::o;11787:151::-;;11873:3;11865:11;;11911:4;11906:3;11902:14;11894:22;;11859:79;;;:::o;11945:174::-;;12054:3;12046:11;;12092:4;12087:3;12083:14;12075:22;;12040:79;;;:::o;12126:137::-;;12235:5;12229:12;12219:22;;12200:63;;;:::o;12270:160::-;;12402:5;12396:12;12386:22;;12367:63;;;:::o;12437:122::-;;12531:5;12525:12;12515:22;;12496:63;;;:::o;12566:108::-;;12664:4;12659:3;12655:14;12647:22;;12641:33;;;:::o;12681:131::-;;12802:4;12797:3;12793:14;12785:22;;12779:33;;;:::o;12820:178::-;;12950:6;12945:3;12938:19;12987:4;12982:3;12978:14;12963:29;;12931:67;;;;:::o;13007:201::-;;13160:6;13155:3;13148:19;13197:4;13192:3;13188:14;13173:29;;13141:67;;;;:::o;13217:153::-;;13322:6;13317:3;13310:19;13359:4;13354:3;13350:14;13335:29;;13303:67;;;;:::o;13379:163::-;;13494:6;13489:3;13482:19;13531:4;13526:3;13522:14;13507:29;;13475:67;;;;:::o;13550:91::-;;13612:24;13630:5;13612:24;:::i;:::-;13601:35;;13595:46;;;:::o;13648:85::-;;13721:5;13714:13;13707:21;13696:32;;13690:43;;;:::o;13740:121::-;;13813:42;13806:5;13802:54;13791:65;;13785:76;;;:::o;13868:72::-;;13930:5;13919:16;;13913:27;;;:::o;13947:81::-;;14018:4;14011:5;14007:16;13996:27;;13990:38;;;:::o;14035:129::-;;14122:37;14153:5;14122:37;:::i;:::-;14109:50;;14103:61;;;:::o;14171:121::-;;14250:37;14281:5;14250:37;:::i;:::-;14237:50;;14231:61;;;:::o;14299:108::-;;14378:24;14396:5;14378:24;:::i;:::-;14365:37;;14359:48;;;:::o;14415:145::-;14496:6;14491:3;14486;14473:30;14552:1;14543:6;14538:3;14534:16;14527:27;14466:94;;;:::o;14569:268::-;14634:1;14641:101;14655:6;14652:1;14649:13;14641:101;;;14731:1;14726:3;14722:11;14716:18;14712:1;14707:3;14703:11;14696:39;14677:2;14674:1;14670:10;14665:15;;14641:101;;;14757:6;14754:1;14751:13;14748:2;;;14822:1;14813:6;14808:3;14804:16;14797:27;14748:2;14618:219;;;;:::o;14845:97::-;;14933:2;14929:7;14924:2;14917:5;14913:14;14909:28;14899:38;;14893:49;;;:::o;14950:117::-;15019:24;15037:5;15019:24;:::i;:::-;15012:5;15009:35;14999:2;;15058:1;15055;15048:12;14999:2;14993:74;:::o;15074:111::-;15140:21;15155:5;15140:21;:::i;:::-;15133:5;15130:32;15120:2;;15176:1;15173;15166:12;15120:2;15114:71;:::o;15192:117::-;15261:24;15279:5;15261:24;:::i;:::-;15254:5;15251:35;15241:2;;15300:1;15297;15290:12;15241:2;15235:74;:::o;15316:113::-;15383:22;15399:5;15383:22;:::i;:::-;15376:5;15373:33;15363:2;;15420:1;15417;15410:12;15363:2;15357:72;:::o",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC20.sol\";\ncontract ERC20Factory {\n    struct Token {\n        string name;\n        string symbol;\n        uint8 decimal;\n        uint256 totalSupply;\n        address creator;\n        address addr;\n    }\n\n    mapping(address => address[]) public created;\n    Token[] public tokens;\n\n    function createERC20(\n        uint256 initialAmount,\n        string memory name,\n        uint8 decimal,\n        string memory symbol\n    ) public returns (address) {\n        ERC20 newToken = (new ERC20(name, symbol, initialAmount, decimal));\n        created[msg.sender].push(address(newToken));\n        tokens.push(Token(name, symbol, decimal, initialAmount, msg.sender, address(newToken)));\n        newToken.transfer(msg.sender, initialAmount);\n        return address(newToken);\n    }\n\n    function _codeAt(address addr)\n        internal\n        view\n        returns (bytes memory outputCode)\n    {\n        assembly {\n            // solhint-disable-line no-inline-assembly\n            let size := extcodesize(addr)\n            outputCode := mload(0x40)\n            mstore(\n                0x40,\n                add(outputCode, and(add(add(size, 0x20), 0x1f), not(0x1f)))\n            )\n            mstore(outputCode, size)\n            extcodecopy(addr, add(outputCode, 0x20), 0, size)\n        }\n    }\n\n    function getCreated(address addr) public view returns(address[] memory) {\n        return created[addr];\n    }\n    function getTokens() public view returns(Token[] memory){\n        return tokens;\n    }\n\n}\n",
  "sourcePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
  "ast": {
    "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
    "exportedSymbols": {
      "ERC20Factory": [
        1157
      ]
    },
    "id": 1158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1036,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:6"
      },
      {
        "id": 1037,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:6"
      },
      {
        "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1038,
        "nodeType": "ImportDirective",
        "scope": 1158,
        "sourceUnit": 910,
        "src": "101:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          909
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1157,
        "linearizedBaseContracts": [
          1157
        ],
        "name": "ERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20Factory.Token",
            "id": 1051,
            "members": [
              {
                "constant": false,
                "id": 1040,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "174:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1039,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1042,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "195:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1041,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1044,
                "mutability": "mutable",
                "name": "decimal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "218:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1043,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "218:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1046,
                "mutability": "mutable",
                "name": "totalSupply",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "241:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1045,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1048,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "270:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1047,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "270:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1050,
                "mutability": "mutable",
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "295:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1049,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nodeType": "StructDefinition",
            "scope": 1157,
            "src": "151:163:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f8dead3",
            "id": 1056,
            "mutability": "mutable",
            "name": "created",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1157,
            "src": "320:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 1055,
              "keyType": {
                "id": 1052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "320:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1053,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "339:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1054,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "339:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 1059,
            "mutability": "mutable",
            "name": "tokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1157,
            "src": "370:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
              "typeString": "struct ERC20Factory.Token[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1057,
                "name": "Token",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1051,
                "src": "370:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$1051_storage_ptr",
                  "typeString": "struct ERC20Factory.Token"
                }
              },
              "id": 1058,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "370:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Factory.Token[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "562:321:6",
              "statements": [
                {
                  "assignments": [
                    1073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1124,
                      "src": "572:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$909",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1072,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 909,
                        "src": "572:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1082,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1076,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "600:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1077,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "606:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1078,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "614:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1079,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "629:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "590:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_ERC20_$909_$",
                            "typeString": "function (string memory,string memory,uint256,uint8) returns (contract ERC20)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 1074,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 909,
                            "src": "594:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "id": 1081,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "589:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$909",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "572:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1090,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "681:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "673:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "673:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "673:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "created",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "648:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 1086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "656:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "656:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "648:43:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1098,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "719:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1099,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "725:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1100,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "733:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1101,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "742:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "757:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "757:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1106,
                                "name": "newToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1073,
                                "src": "777:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$909",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$909",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "769:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1104,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "769:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "769:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1097,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "713:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Token_$1051_storage_ptr_$",
                            "typeString": "type(struct ERC20Factory.Token storage pointer)"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:74:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1051_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1051_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1094,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "701:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
                          "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "701:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Token_$1051_storage_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token storage ref)"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:87:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "701:87:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "816:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "816:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1116,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "828:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1111,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "798:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 576,
                      "src": "798:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "798:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1121,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "867:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "859:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1119,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1123,
                  "nodeType": "Return",
                  "src": "852:24:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6791322",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "428:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "459:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "decimal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "487:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "510:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:118:6"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "553:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:9:6"
            },
            "scope": 1157,
            "src": "398:485:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "996:402:6",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1015:377:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1084:29:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1108:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1096:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1096:17:6"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1088:4:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1126:25:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:4:6",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1140:11:6"
                        },
                        "variableNames": [
                          {
                            "name": "outputCode",
                            "nodeType": "YulIdentifier",
                            "src": "1126:10:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1188:4:6",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1214:10:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "size",
                                              "nodeType": "YulIdentifier",
                                              "src": "1238:4:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1244:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1234:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1234:15:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1251:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1230:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1230:26:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1262:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "1258:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1258:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:42:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1210:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1210:59:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1164:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1164:119:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1164:119:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "outputCode",
                              "nodeType": "YulIdentifier",
                              "src": "1303:10:6"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1315:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1296:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1296:24:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1296:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1345:4:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:10:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1367:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1351:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1351:21:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1377:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "1333:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1333:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1333:49:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1108:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1345:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1126:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1303:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1355:10:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1132,
                  "nodeType": "InlineAssembly",
                  "src": "1006:386:6"
                }
              ]
            },
            "documentation": null,
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_codeAt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1134,
                  "src": "906:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:14:6"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "outputCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1134,
                  "src": "967:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:25:6"
            },
            "scope": 1157,
            "src": "889:509:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "1476:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1142,
                      "name": "created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "1493:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1144,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1143,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "1501:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1493:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1145,
                  "nodeType": "Return",
                  "src": "1486:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef98992",
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreated",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1147,
                  "src": "1424:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1423:14:6"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1147,
                  "src": "1458:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1138,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1458:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1139,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1458:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1457:18:6"
            },
            "scope": 1157,
            "src": "1404:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1574:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1153,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1059,
                    "src": "1591:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
                      "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1152,
                  "id": 1154,
                  "nodeType": "Return",
                  "src": "1584:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa6ca808",
            "id": 1156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:2:6"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1156,
                  "src": "1559:14:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$1051_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20Factory.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1149,
                      "name": "Token",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1051,
                      "src": "1559:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1051_storage_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      }
                    },
                    "id": 1150,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1559:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Factory.Token[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:16:6"
            },
            "scope": 1157,
            "src": "1518:86:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1158,
        "src": "123:1484:6"
      }
    ],
    "src": "33:1575:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20Factory.sol",
    "exportedSymbols": {
      "ERC20Factory": [
        1157
      ]
    },
    "id": 1158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1036,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:6"
      },
      {
        "id": 1037,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:6"
      },
      {
        "absolutePath": "/Users/shibaoxu/dev/learning/dapp-sample/contracts/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1038,
        "nodeType": "ImportDirective",
        "scope": 1158,
        "sourceUnit": 910,
        "src": "101:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          909
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1157,
        "linearizedBaseContracts": [
          1157
        ],
        "name": "ERC20Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC20Factory.Token",
            "id": 1051,
            "members": [
              {
                "constant": false,
                "id": 1040,
                "mutability": "mutable",
                "name": "name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "174:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1039,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1042,
                "mutability": "mutable",
                "name": "symbol",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "195:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1041,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1044,
                "mutability": "mutable",
                "name": "decimal",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "218:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1043,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "218:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1046,
                "mutability": "mutable",
                "name": "totalSupply",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "241:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1045,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1048,
                "mutability": "mutable",
                "name": "creator",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "270:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1047,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "270:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1050,
                "mutability": "mutable",
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1051,
                "src": "295:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1049,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nodeType": "StructDefinition",
            "scope": 1157,
            "src": "151:163:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f8dead3",
            "id": 1056,
            "mutability": "mutable",
            "name": "created",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1157,
            "src": "320:44:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 1055,
              "keyType": {
                "id": 1052,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "320:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1053,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "339:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1054,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "339:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f64b2be",
            "id": 1059,
            "mutability": "mutable",
            "name": "tokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1157,
            "src": "370:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
              "typeString": "struct ERC20Factory.Token[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1057,
                "name": "Token",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1051,
                "src": "370:5:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$1051_storage_ptr",
                  "typeString": "struct ERC20Factory.Token"
                }
              },
              "id": 1058,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "370:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Factory.Token[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "562:321:6",
              "statements": [
                {
                  "assignments": [
                    1073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "newToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1124,
                      "src": "572:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$909",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1072,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 909,
                        "src": "572:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1082,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1076,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "600:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1077,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "606:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1078,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "614:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1079,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "629:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "590:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_contract$_ERC20_$909_$",
                            "typeString": "function (string memory,string memory,uint256,uint8) returns (contract ERC20)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 1074,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 909,
                            "src": "594:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          }
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "id": 1081,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "589:49:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$909",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "572:66:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1090,
                            "name": "newToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "681:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$909",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "673:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1088,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "673:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "673:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "created",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "648:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 1086,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "656:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "656:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "648:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "648:43:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1098,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "719:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1099,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "725:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1100,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "733:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1101,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "742:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "757:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "757:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1106,
                                "name": "newToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1073,
                                "src": "777:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$909",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$909",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "769:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1104,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "769:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "769:17:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1097,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1051,
                          "src": "713:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Token_$1051_storage_ptr_$",
                            "typeString": "type(struct ERC20Factory.Token storage pointer)"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:74:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1051_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Token_$1051_memory_ptr",
                          "typeString": "struct ERC20Factory.Token memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1094,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "701:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
                          "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "701:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Token_$1051_storage_$returns$__$",
                        "typeString": "function (struct ERC20Factory.Token storage ref)"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:87:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "701:87:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1114,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "816:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "816:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1116,
                        "name": "initialAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "828:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1111,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "798:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 576,
                      "src": "798:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "798:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "798:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1121,
                        "name": "newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "867:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$909",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "859:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1119,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:17:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1123,
                  "nodeType": "Return",
                  "src": "852:24:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b6791322",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "initialAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "428:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "428:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "459:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "decimal",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "487:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "510:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:118:6"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1125,
                  "src": "553:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:9:6"
            },
            "scope": 1157,
            "src": "398:485:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1133,
              "nodeType": "Block",
              "src": "996:402:6",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1015:377:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1084:29:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1108:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1096:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1096:17:6"
                        },
                        "variables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1088:4:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1126:25:6",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:4:6",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1140:11:6"
                        },
                        "variableNames": [
                          {
                            "name": "outputCode",
                            "nodeType": "YulIdentifier",
                            "src": "1126:10:6"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1188:4:6",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1214:10:6"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "size",
                                              "nodeType": "YulIdentifier",
                                              "src": "1238:4:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1244:4:6",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1234:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1234:15:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1251:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1230:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1230:26:6"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1262:4:6",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "1258:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1258:9:6"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:3:6"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1226:42:6"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1210:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1210:59:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1164:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1164:119:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1164:119:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "outputCode",
                              "nodeType": "YulIdentifier",
                              "src": "1303:10:6"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1315:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1296:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1296:24:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1296:24:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "addr",
                              "nodeType": "YulIdentifier",
                              "src": "1345:4:6"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "outputCode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:10:6"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1367:4:6",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1351:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1351:21:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1377:4:6"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "1333:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1333:49:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1333:49:6"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1108:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1127,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1345:4:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1126:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1214:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1303:10:6",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1130,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1355:10:6",
                      "valueSize": 1
                    }
                  ],
                  "id": 1132,
                  "nodeType": "InlineAssembly",
                  "src": "1006:386:6"
                }
              ]
            },
            "documentation": null,
            "id": 1134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_codeAt",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1134,
                  "src": "906:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:14:6"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "outputCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1134,
                  "src": "967:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:25:6"
            },
            "scope": 1157,
            "src": "889:509:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1146,
              "nodeType": "Block",
              "src": "1476:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1142,
                      "name": "created",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1056,
                      "src": "1493:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1144,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1143,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "1501:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1493:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1145,
                  "nodeType": "Return",
                  "src": "1486:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0ef98992",
            "id": 1147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreated",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1147,
                  "src": "1424:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1423:14:6"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1147,
                  "src": "1458:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1138,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1458:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1139,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1458:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1457:18:6"
            },
            "scope": 1157,
            "src": "1404:109:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "1574:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1153,
                    "name": "tokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1059,
                    "src": "1591:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage",
                      "typeString": "struct ERC20Factory.Token storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1152,
                  "id": 1154,
                  "nodeType": "Return",
                  "src": "1584:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa6ca808",
            "id": 1156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1536:2:6"
            },
            "returnParameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1156,
                  "src": "1559:14:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Token_$1051_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ERC20Factory.Token[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 1149,
                      "name": "Token",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 1051,
                      "src": "1559:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1051_storage_ptr",
                        "typeString": "struct ERC20Factory.Token"
                      }
                    },
                    "id": 1150,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1559:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Token_$1051_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Factory.Token[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1558:16:6"
            },
            "scope": 1157,
            "src": "1518:86:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1158,
        "src": "123:1484:6"
      }
    ],
    "src": "33:1575:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xcE0a440782Fa6fE3eef0641B42bB3817d51cA839",
      "transactionHash": "0x69e5c6846497b4034d65861d84775aeb52b839605f47d49312f64db58fa12352"
    }
  },
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-07-24T04:27:45.072Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}